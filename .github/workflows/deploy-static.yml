name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Use node v21
        uses: actions/setup-node@v3
        with:
          node-version: 21
          cache: 'npm'
      - run: npm ci
      - run: mkdir assets/scan/
      - run: webpack
      - run: |
          find node_modules/dynamsoft-*/dist/*.wasm -exec cp {} assets/scan/ \\;
          cp node_modules/dynamsoft-core/dist/core.worker.js assets/scan/
          cp node_modules/dynamsoft-capture-vision-router/dist/cvr.worker.js assets/scan/
          cp node_modules/dynamsoft-capture-vision-std/dist/std.js assets/scan/
      - run: rm -rf node_modules
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
